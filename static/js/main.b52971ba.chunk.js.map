{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","data","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","length","split","About","aria-labelledby","data-bs-parent","Alert","props","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","components_Alert","body","key","Date","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b52971ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(data) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${data.mode} bg-${data.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"#\">{data.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"#\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${data.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={data.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"mixed\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n};\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired\r\n};","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(data) {\r\n  const handleUpClick = ()=>{\r\n    // console.log('Uppercase was clicked: ' + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    data.showAlert(\"Converted to uppercase!\",\"success\")\r\n  }\r\n  const handleLowClick = ()=>{\r\n    // console.log('Uppercase was clicked: ' + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    data.showAlert(\"Converted to Lowercase!\",\"success\");\r\n  }\r\n  const handleClear = () =>{\r\n    let newText ='';\r\n    setText(newText);\r\n    data.showAlert(\"Cleared\",\"success\")\r\n  }\r\n  const handleOnChange = (event)=>{\r\n    // console.log('On Change');\r\n    setText(event.target.value);\r\n  }\r\n  const handleCopy =() =>{\r\n    console.log(\"copied\");\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    data.showAlert(\"Copied!\",\"success\")\r\n  }\r\n  const [text,setText]=useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:data.mode==='dark'?'white':'grey'}}>\r\n      <h1>{data.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} style={{backgroundColor:data.mode==='light'?'white':'grey',color:data.mode==='dark'?'white':'grey'}} onChange={handleOnChange} id=\"myBox\" rows=\"3\"></textarea>\r\n      </div>\r\n      <button className='btn btn-primary mx-2' onClick={handleUpClick}>Convert to Upper case</button>\r\n      <button className='btn btn-primary mx-2' onClick={handleLowClick}>Convert to Lower case</button>\r\n      <button className='btn btn-primary mx-2' onClick={handleCopy}>Copy Text</button>\r\n      <button className='btn btn-primary mx-2'onClick={handleClear}>Clear Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:data.mode==='dark'?'white':'grey'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.length} characters and {text.split(\" \").length} words</p>\r\n      <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// import { useState } from \"react\";\r\n\r\nexport default function About(data) {\r\n    // const[myStyle,setmyStyle]=useState({\r\n    //     color:'white',\r\n    //     backgroundColor:'black',\r\n    // })\r\n\r\n    // const[btnText,setBtnText]=useState(\"Enable Light Mode\")\r\n    // const toggleStyle = () =>{\r\n    //     if(myStyle.color ==='white'){\r\n    //         setmyStyle({\r\n    //             color:'#042743',\r\n    //             backgroundColor:'white',\r\n                \r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\");\r\n    //     }\r\n    //     else{\r\n    //         setmyStyle({\r\n    //             color:'white',\r\n    //             backgroundColor:'#042743',\r\n    //             border: '2px solid white',\r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\")\r\n    //     }\r\n    // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\" style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={{color:data.mode==='dark'?'white':'#042743',backgroundColor:data.mode==='light'?'white':'grey'}}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize =(word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{ props.alert.type}</strong>: {capitalize(props.alert.msg)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport About from './components/About';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n \r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n      setAlert({\r\n        msg: message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n          setAlert(null);\r\n      }, 1500);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Alert alert={alert}/>\r\n    <div className=\"container my-3\">\r\n      <Router>\r\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()}/>\r\n        <Routes>\r\n              <Route exact path=\"/about\"\r\n                element={<About mode={mode} />}>\r\n              </Route>\r\n              <Route exact path=\"/\" element={\r\n                <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter,spaces\" mode={mode}/>}>\r\n              </Route>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n    \r\n    </> \r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}